getwd
getwd()
# libraries: ------------------------------------------------------------------
library(MatchIt)
library(survey)
library(tidyverse)
library(ggplot2)
library(tableone)
# data: -----------------------------------------------------------------------
nhanes = read_delim("nhanes.csv", delim = ",")
nhanes = nhanes %>%
mutate(
diabete = as.factor(diabete),
heart_attack = as.factor(heart_attack),
gender = ifelse(gender == 2, 1, 0),
)
var = c("relative_heart_attack", "gender", "age", "race", "edu", "annual_income",
"bmi", "smoke_life", "phy_vigorous", "phy_moderate", "blood_press",
"blood_press2", "hyper_med", "high_chol", "meadial_access", "cover_hc",
"health_diet", "year_smoke", "year_hyper")
match_tab1 = CreateTableOne(vars=var, strata="diabete", data=nhanes, test=FALSE)
print(match_tab1, smd = TRUE)
var = c("relative_heart_attack", "gender", "age", "race", "edu", "annual_income",
"bmi", "smoke_life", "phy_vigorous", "phy_moderate", "blood_press",
"blood_press2", "hyper_med", "high_chol", "meadial_access", "cover_hc",
"health_diet", "year_smoke", "year_hyper")
match_tab1 = CreateTableOne(vars=var, strata="diabete", data=nhanes, test=FALSE)
print(match_tab1, smd = TRUE)
cap1 = "**figure 1.** *Propensity score distribution by Treated/Control Groups*"
ps = data.frame(
p_score = ps_mod$fitted.values,
Diabete = ifelse(ps_mod$model$diabete == 1, "Diabetes", "No Diabetes")
)
## Logistic regression for treatment ~ pretreatment:
design_ps = svydesign( ids = ~1, weights = ~weight, data = nhanes )
ps_mod = svyglm(diabete ~ relative_heart_attack + gender + age + race + edu
+ annual_income + bmi + smoke_life + phy_vigorous + phy_moderate
+ blood_press + blood_press2 + hyper_med + hbq_med + high_chol
+ meadial_access + cover_hc + health_diet + year_smoke + year_hyper,
family = binomial(),
design = design_ps)
## Get the propensity score:
p_score = predict(ps_mod, type = "response")
cap1 = "**figure 1.** *Propensity score distribution by Treated/Control Groups*"
ps = data.frame(
p_score = ps_mod$fitted.values,
Diabete = ifelse(ps_mod$model$diabete == 1, "Diabetes", "No Diabetes")
)
fig1 = ps %>%
ggplot( aes(x = p_score) ) +
geom_histogram( aes(color = Diabete, fill = Diabete),
position = "identity", bins = 30, alpha = 0.3) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
xlab("Propensity Score") +
ylab("Frequency") +
theme_bw()
cap1 = "**figure 1.** *Propensity score distribution by Treated/Control Groups*"
print(fig1)
nhanes_ps = nhanes %>% mutate( p_score = p_score)
match_mod = matchit(ps_mod,
distance = 'logit',
method = "nearest",
caliper = .2,
ratio = 1,
data = nhanes_ps,
replace = FALSE)
ps_match = match.data(match_mod)
#dim(ps_match)
var = c("relative_heart_attack", "gender", "age", "race", "edu", "annual_income",
"bmi", "smoke_life", "phy_vigorous", "phy_moderate", "blood_press",
"blood_press2", "hyper_med", "high_chol", "meadial_access", "cover_hc",
"health_diet", "year_smoke", "year_hyper")
match_tab = CreateTableOne(vars=var, strata="diabete", data=ps_match, test=FALSE)
print(match_tab, smd = TRUE)
cap2 = "**Table 1.** *Proportion of Heat Attack with Pre-matched Group*"
tab_pre_mt = nhanes %>%
group_by(diabete, heart_attack) %>%
summarize(n = sum(weight), .groups = "drop_last") %>%
mutate(
prop = 100*(n / sum(n))
) %>%
transmute(
`Heart Attack` = ifelse(heart_attack == 1, "YES", "NO"),
Diabetes = ifelse(diabete == 1, "Diabetes", "NoDiabetes"),
prop = sprintf('%10.0f (%4.2f%%)', n, prop)
) %>%
pivot_wider(
id_cols = `Heart Attack`,
names_from = Diabetes,
values_from = prop
) %>%
knitr::kable(format = 'html', caption = cap2) %>%
kableExtra::kable_styling("striped", full_width = TRUE) %>%
kableExtra::add_header_above(
header = c("Proportion of Heat Attack with Pre-matched Group" = 3)
)
tab_pre_mt
cap3 = "**Table 2.** *Proportion of Heat Attack with Matched Group*"
tab_mt = ps_match %>%
group_by(diabete, heart_attack) %>%
summarize(n = sum(weight), .groups = "drop_last") %>%
mutate(
prop = 100*(n / sum(n))
) %>%
transmute(
`Heart Attack` = ifelse(heart_attack == 1, "YES", "NO"),
Diabetes = ifelse(diabete == 1, "Diabetes", "NoDiabetes"),
prop = sprintf('%10.0f (%4.2f%%)', n, prop)
) %>%
pivot_wider(
id_cols = `Heart Attack`,
names_from = Diabetes,
values_from = prop
) %>%
knitr::kable(format = 'html', caption = cap3) %>%
kableExtra::kable_styling("striped", full_width = TRUE) %>%
kableExtra::add_header_above(
header = c("Proportion of Heat Attack with Matched Group" = 3)
)
tab_mt
cap4 = "**Table 3.** *Proportion of Heat Attack with Inverse Propensity Weight*"
invert = nhanes_ps %>%
select(diabete, heart_attack, weight, p_score) %>%
mutate(
inverse_wt = ifelse(diabete == 1, 1/p_score, 1/(1-p_score)),
new_wt = weight * inverse_wt
) %>%
group_by(diabete, heart_attack) %>%
summarize(n = sum(new_wt), .groups = "drop_last") %>%
mutate(
prop = 100*(n / sum(n))
) %>%
transmute(
`Heart Attack` = ifelse(heart_attack == 1, "YES", "NO"),
Diabetes = ifelse(diabete == 1, "Diabetes", "NoDiabetes"),
prop = sprintf('%10.0f (%4.2f%%)', n, prop)
) %>%
pivot_wider(
id_cols = `Heart Attack`,
names_from = Diabetes,
values_from = prop
) %>%
knitr::kable(format = 'html', caption = cap4) %>%
kableExtra::kable_styling("striped", full_width = TRUE) %>%
kableExtra::add_header_above(
header = c("Proportion of Heat Attack with Inverse Propensity Weight" = 3)
)
cap4 = "**Table 3.** *Proportion of Heat Attack with Inverse Propensity Weight*"
invert = nhanes_ps %>%
select(diabete, heart_attack, weight, p_score) %>%
mutate(
inverse_wt = ifelse(diabete == 1, 1/p_score, 1/(1-p_score)),
new_wt = weight * inverse_wt
) %>%
group_by(diabete, heart_attack) %>%
summarize(n = sum(new_wt), .groups = "drop_last") %>%
mutate(
prop = 100*(n / sum(n))
) %>%
transmute(
`Heart Attack` = ifelse(heart_attack == 1, "YES", "NO"),
Diabetes = ifelse(diabete == 1, "Diabetes", "NoDiabetes"),
prop = sprintf('%10.0f (%4.2f%%)', n, prop)
) %>%
pivot_wider(
id_cols = `Heart Attack`,
names_from = Diabetes,
values_from = prop
) %>%
knitr::kable(format = 'html', caption = cap4) %>%
kableExtra::kable_styling("striped", full_width = TRUE) %>%
kableExtra::add_header_above(
header = c("Proportion of Heat Attack with Inverse Propensity Weight" = 3)
)
# model with covariates
mod1 = lm(heart_attack~. - weight, weights = weight, data = ps_match)
names(ps_match)
help(lm)
# model with covariates
mod1 = lm(heart_attack~. - weight, data = ps_match)
# model with covariates
mod1 = lm(heart_attack~. - weight, weights = weight data = ps_match)
# model with covariates
mod1 = lm(heart_attack~. - weight - id, weights = weight data = ps_match)
# model with covariates
mod1 = lm(heart_attack~. - weight - id, weights = weight, data = ps_match)
# model with covariates
mod1 = lm(heart_attack~ diabete, weights = weight, data = ps_match)
?svyglm
?family
# model with covariates
design_mod1 = svydesign( ids = ~1, weights = ~weight, data = ps_match )
mod1 = svyglm( heart_attack~diabete + relative_heart_attack + gender + age + race + edu
+ annual_income + bmi + smoke_life + phy_vigorous + phy_moderate
+ blood_press + blood_press2 + hyper_med + hbq_med + high_chol
+ meadial_access + cover_hc + health_diet + year_smoke + year_hyper,
family = binomial(),
design = design_mod1)
summary(mod1)
design_mod2 = svydesign( ids = ~1, weights = ~weight, data = ps_match )
mod2 = svyglm( heart_attack~diabete,
family = binomial(),
design = design_mod2)
summary(mod2)
# model with covariates
design_mod1 = svydesign( ids = ~1, weights = ~weight, data = ps_match )
mod1 = svyglm( heart_attack~diabete + relative_heart_attack + gender + age + race + edu
+ annual_income + bmi + smoke_life + phy_vigorous + phy_moderate
+ blood_press + blood_press2 + hyper_med + hbq_med + high_chol
+ meadial_access + cover_hc + health_diet + year_smoke + year_hyper,
family = binomial(),
design = design_mod1)
summary(mod1)
with(ps_match, t.test(heart_attack~diabete))
with(ps_match, t.test(heart_attack ~ diabete))
t.test(heart_attack ~ diabete)
t.test(ps_match$heart_attack ~ ps_match$diabete)
?ttest
?t.test
with(ps_match, ttest(heart_attack, diabete))
# libraries: ------------------------------------------------------------------
library(MatchIt)
library(survey)
library(tidyverse)
library(ggplot2)
library(tableone)
# data: -----------------------------------------------------------------------
nhanes = read_delim("nhanes.csv", delim = ",")
nhanes = nhanes %>%
mutate(
diabete = as.factor(diabete),
heart_attack = as.factor(heart_attack),
gender = ifelse(gender == 2, 1, 0),
)
var = c("relative_heart_attack", "gender", "age", "race", "edu", "annual_income",
"bmi", "smoke_life", "phy_vigorous", "phy_moderate", "blood_press",
"blood_press2", "hyper_med", "high_chol", "meadial_access", "cover_hc",
"health_diet", "year_smoke", "year_hyper")
match_tab1 = CreateTableOne(vars=var, strata="diabete", data=nhanes, test=FALSE)
print(match_tab1, smd = TRUE)
## Logistic regression for treatment ~ pretreatment:
design_ps = svydesign( ids = ~1, weights = ~weight, data = nhanes )
ps_mod = svyglm(diabete ~ relative_heart_attack + gender + age + race + edu
+ annual_income + bmi + smoke_life + phy_vigorous + phy_moderate
+ blood_press + blood_press2 + hyper_med + hbq_med + high_chol
+ meadial_access + cover_hc + health_diet + year_smoke + year_hyper,
family = binomial(),
design = design_ps)
## Get the propensity score:
p_score = predict(ps_mod, type = "response")
cap1 = "**figure 1.** *Propensity score distribution by Treated/Control Groups*"
ps = data.frame(
p_score = ps_mod$fitted.values,
Diabete = ifelse(ps_mod$model$diabete == 1, "Diabetes", "No Diabetes")
)
fig1 = ps %>%
ggplot( aes(x = p_score) ) +
geom_histogram( aes(color = Diabete, fill = Diabete),
position = "identity", bins = 30, alpha = 0.3) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
xlab("Propensity Score") +
ylab("Frequency") +
theme_bw()
cap1 = "**figure 1.** *Propensity score distribution by Treated/Control Groups*"
print(fig1)
nhanes_ps = nhanes %>% mutate( p_score = p_score)
match_mod = matchit(ps_mod,
distance = 'logit',
method = "nearest",
caliper = .2,
ratio = 1,
data = nhanes_ps,
replace = FALSE)
ps_match = match.data(match_mod)
var = c("relative_heart_attack", "gender", "age", "race", "edu", "annual_income",
"bmi", "smoke_life", "phy_vigorous", "phy_moderate", "blood_press",
"blood_press2", "hyper_med", "high_chol", "meadial_access", "cover_hc",
"health_diet", "year_smoke", "year_hyper")
match_tab = CreateTableOne(vars=var, strata="diabete", data=ps_match, test=FALSE)
print(match_tab, smd = TRUE)
cap2 = "**Table 1.** *Proportion of Heat Attack with Pre-matched Group*"
tab_pre_mt = nhanes %>%
group_by(diabete, heart_attack) %>%
summarize(n = sum(weight), .groups = "drop_last") %>%
mutate(
prop = 100*(n / sum(n))
) %>%
transmute(
`Heart Attack` = ifelse(heart_attack == 1, "YES", "NO"),
Diabetes = ifelse(diabete == 1, "Diabetes", "NoDiabetes"),
prop = sprintf('%10.0f (%4.2f%%)', n, prop)
) %>%
pivot_wider(
id_cols = `Heart Attack`,
names_from = Diabetes,
values_from = prop
) %>%
knitr::kable(format = 'html', caption = cap2) %>%
kableExtra::kable_styling("striped", full_width = TRUE) %>%
kableExtra::add_header_above(
header = c("Proportion of Heat Attack with Pre-matched Group" = 3)
)
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
heart_attack_d = ps_match %>%
filter(diabete == 1) %>%
select(heart_attack)
# libraries: ------------------------------------------------------------------
library(MatchIt)
library(survey)
library(tidyverse)
library(ggplot2)
library(tableone)
# data: -----------------------------------------------------------------------
nhanes = read_delim("nhanes.csv", delim = ",")
nhanes = nhanes %>%
mutate(
diabete = as.factor(diabete),
heart_attack = as.factor(heart_attack),
gender = ifelse(gender == 2, 1, 0),
)
var = c("relative_heart_attack", "gender", "age", "race", "edu", "annual_income",
"bmi", "smoke_life", "phy_vigorous", "phy_moderate", "blood_press",
"blood_press2", "hyper_med", "high_chol", "meadial_access", "cover_hc",
"health_diet", "year_smoke", "year_hyper")
match_tab1 = CreateTableOne(vars=var, strata="diabete", data=nhanes, test=FALSE)
print(match_tab1, smd = TRUE)
## Logistic regression for treatment ~ pretreatment:
design_ps = svydesign( ids = ~1, weights = ~weight, data = nhanes )
ps_mod = svyglm(diabete ~ relative_heart_attack + gender + age + race + edu
+ annual_income + bmi + smoke_life + phy_vigorous + phy_moderate
+ blood_press + blood_press2 + hyper_med + hbq_med + high_chol
+ meadial_access + cover_hc + health_diet + year_smoke + year_hyper,
family = binomial(),
design = design_ps)
## Get the propensity score:
p_score = predict(ps_mod, type = "response")
cap1 = "**figure 1.** *Propensity score distribution by Treated/Control Groups*"
ps = data.frame(
p_score = ps_mod$fitted.values,
Diabete = ifelse(ps_mod$model$diabete == 1, "Diabetes", "No Diabetes")
)
fig1 = ps %>%
ggplot( aes(x = p_score) ) +
geom_histogram( aes(color = Diabete, fill = Diabete),
position = "identity", bins = 30, alpha = 0.3) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
xlab("Propensity Score") +
ylab("Frequency") +
theme_bw()
cap1 = "**figure 1.** *Propensity score distribution by Treated/Control Groups*"
print(fig1)
nhanes_ps = nhanes %>% mutate( p_score = p_score)
match_mod = matchit(ps_mod,
distance = 'logit',
method = "nearest",
caliper = .2,
ratio = 1,
data = nhanes_ps,
replace = FALSE)
ps_match = match.data(match_mod)
var = c("relative_heart_attack", "gender", "age", "race", "edu", "annual_income",
"bmi", "smoke_life", "phy_vigorous", "phy_moderate", "blood_press",
"blood_press2", "hyper_med", "high_chol", "meadial_access", "cover_hc",
"health_diet", "year_smoke", "year_hyper")
match_tab = CreateTableOne(vars=var, strata="diabete", data=ps_match, test=FALSE)
print(match_tab, smd = TRUE)
cap2 = "**Table 1.** *Proportion of Heat Attack with Pre-matched Group*"
tab_pre_mt = nhanes %>%
group_by(diabete, heart_attack) %>%
summarize(n = sum(weight), .groups = "drop_last") %>%
mutate(
prop = 100*(n / sum(n))
) %>%
transmute(
`Heart Attack` = ifelse(heart_attack == 1, "YES", "NO"),
Diabetes = ifelse(diabete == 1, "Diabetes", "NoDiabetes"),
prop = sprintf('%10.0f (%4.2f%%)', n, prop)
) %>%
pivot_wider(
id_cols = `Heart Attack`,
names_from = Diabetes,
values_from = prop
) %>%
knitr::kable(format = 'html', caption = cap2) %>%
kableExtra::kable_styling("striped", full_width = TRUE) %>%
kableExtra::add_header_above(
header = c("Proportion of Heat Attack with Pre-matched Group" = 3)
)
tab_pre_mt
cap3 = "**Table 2.** *Proportion of Heat Attack with Matched Group*"
tab_mt = ps_match %>%
group_by(diabete, heart_attack) %>%
summarize(n = sum(weight), .groups = "drop_last") %>%
mutate(
prop = 100*(n / sum(n))
) %>%
transmute(
`Heart Attack` = ifelse(heart_attack == 1, "YES", "NO"),
Diabetes = ifelse(diabete == 1, "Diabetes", "NoDiabetes"),
prop = sprintf('%10.0f (%4.2f%%)', n, prop)
) %>%
pivot_wider(
id_cols = `Heart Attack`,
names_from = Diabetes,
values_from = prop
) %>%
knitr::kable(format = 'html', caption = cap3) %>%
kableExtra::kable_styling("striped", full_width = TRUE) %>%
kableExtra::add_header_above(
header = c("Proportion of Heat Attack with Matched Group" = 3)
)
tab_mt
heart_attack_d = ps_match %>%
filter(diabete == 1) %>%
select(heart_attack)
heart_attack_nd = ps_match %>%
filter(diabete == 0) %>%
select(heart_attack)
t.test(heart_attack_d, heart_attack_nd)
heart_attack_d
heart_attack_nd
heart_attack_d
dim(heart_attack_d)
dim(heart_attack_nd)
t.test(heart_attack_d, heart_attack_nd)
t.test(mean(heart_attack_d), mean(heart_attack_nd))
t.test(heart_attack_d, heart_attack_nd)
t.test(as.numeric(heart_attack_d), as.numeric(heart_attack_nd))
heart_attack_d = ps_match %>%
filter(diabete == 1) %>%
mutate(
heart_attack = as.numeric(heart_attack)
)
select(heart_attack)
heart_attack_d = ps_match %>%
filter(diabete == 1) %>%
mutate(
heart_attack = as.numeric(heart_attack)
)
select(heart_attack)
heart_attack_d = ps_match %>%
filter(diabete == 1) %>%
mutate(
heart_attack = as.numeric(heart_attack)
) %>%
select(heart_attack)
class(heart_attack_d)
heart_attack_d = ps_match %>%
filter(diabete == 1)
heart_attack_nd = ps_match %>%
filter(diabete == 0)
heart_attack_d = ps_match %>%
filter(diabete == 1)
heart_attack_nd = ps_match %>%
filter(diabete == 0)
t.test(heart_attack_d$heart_attack, heart_attack_nd$heart_attack)
heart_attack_d = ps_match %>%
filter(diabete == 1)
heart_attack_nd = ps_match %>%
filter(diabete == 0)
t.test(as.numeric(heart_attack_d$heart_attack), as.numeric(heart_attack_nd$heart_attack))
heart_attack_d = ps_match %>%
filter(diabete == 1)
heart_attack_nd = ps_match %>%
filter(diabete == 0)
t.test(as.numeric(heart_attack_d$heart_attack), as.numeric(heart_attack_nd$heart_attack)) %>%
knitr::kable(format = 'html')
heart_attack_d = ps_match %>%
filter(diabete == 1)
heart_attack_nd = ps_match %>%
filter(diabete == 0)
t.test(as.numeric(heart_attack_d$heart_attack), as.numeric(heart_attack_nd$heart_attack))
heart_attack_d = ps_match %>%
filter(diabete == 1)
heart_attack_nd = ps_match %>%
filter(diabete == 0)
print(t.test(as.numeric(heart_attack_d$heart_attack), as.numeric(heart_attack_nd$heart_attack)))
heart_attack_d = ps_match %>%
filter(diabete == 1)
heart_attack_nd = ps_match %>%
filter(diabete == 0)
print(t.test(as.numeric(heart_attack_d$heart_attack), as.numeric(heart_attack_nd$heart_attack)))
